name: Terraform Plan

on:
  push:
    branches:
      - master
      - dev
      - uat

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout
  pull-requests: write # Required to post comments
      
jobs:
  start-runner:
    timeout-minutes: 5
    name: Start self-hosted EC2 runner
    runs-on: ubuntu-latest
    env:
      AWS_ROLE: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/ECR_OIDC
      AWS_REGION: ${{ vars.AWS_REGION }}
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          role-session-name: github-ec2-session-start
          aws-region: ${{ env.AWS_REGION }}
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          ec2-image-id: ${{ secrets.GH_RUNNER_AMI }}
          ec2-instance-type: t3.micro
          subnet-id: ${{ secrets.AWS_SUBNET_ID }}
          security-group-id: ${{ secrets.AWS_SG }}
          iam-role-name: ${{ env.AWS_ROLE }} # optional, requires additional permissions
          aws-resource-tags: > # optional, requires additional permissions
            [
              {"Key": "Name", "Value": "ec2-github-runner"},
              {"Key": "GitHubRepository", "Value": "${{ github.repository }}"}
            ]

  terraform:
    name: Terrafom 
    needs: start-runner 
    runs-on: ${{ needs.start-runner.outputs.label }} 
    env:
      GITHUB_TOKEN: ${{ github.token }}
      AWS_ROLE: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/ECR_OIDC
      AWS_REGION: ${{ vars.AWS_REGION }}
      TF_VERSION: ${{ vars.TF_VERSION }}
    steps:
      - name: Checkout Repo
        run: actions/checkout@v4
      - name: Setup Terraform 
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          role-session-name: github-ec2-session-start
          aws-region: ${{ env.AWS_REGION }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
      - name: Terraform Init
        id: init
        run: |
          terraform init -lock=false -input=false -backend-config="key=bluegreen-${{github.base_ref}}.tfstate"
      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -lock=false -input=false 
      - name: Terraform Apply
        id: apply
        run: |
          terraform apply -input=false -auto-approve tfplan

  stop-runner:
    timeout-minutes: 2
    name: Stop self-hosted EC2 runner
    needs:
      - start-runner 
      - terraform
    runs-on: ubuntu-latest
    env:
      AWS_ROLE: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/ECR_OIDC
      AWS_REGION: ${{ vars.AWS_REGION }}
    if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          role-session-name: github-ec2-session-start
          aws-region: ${{ env.AWS_REGION }}
      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
          