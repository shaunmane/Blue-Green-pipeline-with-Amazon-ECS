name: Terraform Plan

on:
  pull_request:
    branches:
      - main

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout
  pull-requests: write # Required to post comments

env:
  GITHUB_TOKEN: ${{ github.token }}
  AWS_ROLE: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/ECR_OIDC
  AWS_REGION: ${{ vars.AWS_REGION }}
  TF_VERSION: ${{ vars.TF_VERSION }}
  WORKING_DIR: ./terraform 

jobs:
  validate:
    name: Validate 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0 
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Setup Terraform 
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
      - name: Terraform Format
        id: fmt
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          terraform fmt -check -recursive -diff
        continue-on-error: true
      - name: Auto Commit Changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "style: Terraform fmt"
          file_pattern: "*.tf"
          commit_user_name: "github-actions[bot]"
      - name: Terraform Init
        id: init
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          terraform init
      - name: Terraform Validate
        id: validate
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          terraform validate

  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: validate 
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
      - name: Terraform Init
        working-directory: ${{ env.WORKING_DIR }}
        run: terraform init
      - name: Terraform Plan
        working-directory: ${{ env.WORKING_DIR }}
        run: terraform plan -var-file="terraform.tfvars" -out=tfplan
      - name: Upload Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ${{ env.WORKING_DIR }}/tfplan